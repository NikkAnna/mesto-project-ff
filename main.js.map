{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\r\n    headers: {\r\n        authorization: '8f4967ce-f48f-4d37-a0f6-afbb9d7f6d1e',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nconst handleResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n}\r\n\r\nexport const deletePlaceRequest = (placeCardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${placeCardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const addPlaceLikeRequest = (placeCardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${placeCardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const removePlaceLikeRequest = (placeCardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${placeCardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const updateProfileRequest = (profile) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify(profile),\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const updateAvatarRequest = (avatarLink) => {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({ avatar: avatarLink }),\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const createPlaceRequest = (place) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify(place),\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const getProfileRequest = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n    })\r\n        .then(handleResponse)\r\n}\r\n\r\nexport const getPlacesRequest = () => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n    })\r\n        .then(handleResponse)\r\n}","import {\r\n    deletePlaceRequest,\r\n} from './api.js';\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\nexport function deletePlaceCard(card, cardId) {\r\n    deletePlaceRequest(cardId)\r\n        .then((data) => card.remove())\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport function createPlaceCard(place, selfProfileId, createPopupLargeCard, handleTogglePlaceCardLike, handleOpenPopupDelete, popupDelete) {\r\n    const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n\r\n    const cardImage = cardElement.querySelector('.card__image');\r\n    cardImage.src = place.link;\r\n\r\n    cardElement.querySelector('.card__title').textContent = place.name;\r\n    cardImage.alt = place.name;\r\n\r\n    cardImage.addEventListener('click', () => createPopupLargeCard(place.link, place.name));\r\n\r\n    const likesAmount = place.likes.length;\r\n    const likeCounter = cardElement.querySelector('.card__like-counter');\r\n\r\n    likeCounter.textContent = likesAmount;\r\n\r\n    const likeButton = cardElement.querySelector('.card__like-button');\r\n    likeButton.addEventListener('click', (evt) => {\r\n        handleTogglePlaceCardLike(evt, place._id, likeCounter)\r\n    });\r\n\r\n    const myLikeIsOnCard = place.likes.some((like) => {\r\n        return like._id === selfProfileId\r\n    })\r\n\r\n    if (myLikeIsOnCard) {\r\n        addPlaceCardLike(likeButton);\r\n    } else {\r\n        removePlaceCardLike(likeButton);\r\n    };\r\n\r\n    const deleteButton = cardElement.querySelector('.card__delete-button');\r\n\r\n    if (place.owner._id === selfProfileId) {\r\n        deleteButton.addEventListener('click', () => {\r\n            handleOpenPopupDelete(place._id, cardElement, popupDelete);\r\n        });\r\n        deleteButton.classList.remove('card__delete-button_inactive');\r\n    } else {\r\n        deleteButton.classList.add('card__delete-button_inactive');\r\n    };\r\n\r\n    return cardElement;\r\n}\r\n\r\nexport function addPlaceCardLike(likeButton) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n}\r\n\r\nexport function removePlaceCardLike(likeButton) {\r\n    likeButton.classList.remove('card__like-button_is-active');\r\n}\r\n\r\nexport function countPlaceCardLikes(likeCounter, data) {\r\n    likeCounter.textContent = data.likes.length\r\n}\r\n\r\nexport function cardPlaceLikeStatus(likeButton) {\r\n    if (likeButton.classList.contains('card__like-button_is-active')) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","//функции, связанные с открытием/ закрытием модальных окон\r\n\r\nfunction openModal(popup) {\r\n    popup.classList.add(\"popup_is-opened\");\r\n    document.addEventListener(\"keydown\", closeModalByEscapeButton);\r\n}\r\n\r\nfunction closeModal(popup) {\r\n    popup.classList.remove(\"popup_is-opened\");\r\n    document.removeEventListener(\"keydown\", closeModalByEscapeButton);\r\n}\r\n\r\nfunction closeModalByOverlayAndCloseButton(evt, popup) {\r\n    if (\r\n        evt.target.classList.contains(\"popup__close\") ||\r\n        evt.target.classList.contains(\"popup\")\r\n    ) {\r\n        closeModal(popup);\r\n    }\r\n}\r\n\r\nfunction closeModalByEscapeButton(evt) {\r\n    if (evt.key === \"Escape\") {\r\n        const popup = document.querySelector(\".popup_is-opened\");\r\n        closeModal(popup);\r\n    }\r\n}\r\n\r\nexport { openModal, closeModal, closeModalByOverlayAndCloseButton };\r\n","\r\nfunction showInputError(form, inputField, inputErrorClass, errorClass) {\r\n    const formError = form.querySelector(`.${inputField.id}-error`);\r\n\r\n    inputField.classList.add(inputErrorClass);\r\n    formError.textContent = inputField.validationMessage;\r\n    formError.classList.add(errorClass);\r\n}\r\n\r\nfunction removeInputError(form, inputField, inputErrorClass, errorClass) {\r\n    const formError = form.querySelector(`.${inputField.id}-error`);\r\n\r\n    inputField.classList.remove(inputErrorClass);\r\n    formError.classList.remove(errorClass);\r\n\r\n    formError.textContent = '';\r\n}\r\n\r\nfunction validateInputField(form, inputField, inputErrorClass, errorClass) {\r\n    if (inputField.validity.patternMismatch) {\r\n        inputField.setCustomValidity(inputField.dataset.errorMessage);\r\n    } else {\r\n        inputField.setCustomValidity('');\r\n    }\r\n\r\n    if (!inputField.validity.valid) {\r\n        showInputError(form, inputField, inputErrorClass, errorClass);\r\n    } else {\r\n        removeInputError(form, inputField, inputErrorClass, errorClass);\r\n    }\r\n}\r\n\r\nfunction setEventListeners(form, validationConfig) {\r\n    const inputFields = Array.from(form.querySelectorAll(validationConfig.inputSelector));\r\n    const inputErrorClass = validationConfig.inputErrorClass;\r\n    const errorClass = validationConfig.errorClass;\r\n    const formButton = form.querySelector(validationConfig.submitButtonSelector);\r\n    const inactiveFormButton = validationConfig.inactiveButtonClass;\r\n\r\n    toggleFormButtonStatus(inputFields, formButton, inactiveFormButton);\r\n\r\n    inputFields.forEach((inputField) => {\r\n        inputField.addEventListener('input', () => {\r\n            validateInputField(form, inputField, inputErrorClass, errorClass);\r\n            toggleFormButtonStatus(inputFields, formButton, inactiveFormButton)\r\n        })\r\n    })\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n    const forms = Array.from(document.querySelectorAll(validationConfig.formSelector))\r\n\r\n    forms.forEach((form) => {\r\n        setEventListeners(form, validationConfig);\r\n    })\r\n\r\n}\r\n\r\nfunction checkInvalidInput(inputFields) {\r\n    return inputFields.some((inputField) => {\r\n        return !inputField.validity.valid;\r\n    })\r\n}\r\n\r\nfunction addInactiveButtonClass(formButton, inactiveButtonClass) {\r\n    formButton.disabled = true;\r\n    formButton.classList.add(inactiveButtonClass)\r\n}\r\n\r\nfunction removeInactiveButtonClass(formButton, inactiveButtonClass) {\r\n    formButton.disabled = false;\r\n    formButton.classList.remove(inactiveButtonClass)\r\n}\r\n\r\nfunction toggleFormButtonStatus(inputFields, formButton, inactiveButtonClass) {\r\n    if (checkInvalidInput(inputFields)) {\r\n        addInactiveButtonClass(formButton, inactiveButtonClass);\r\n    } else {\r\n        removeInactiveButtonClass(formButton, inactiveButtonClass);\r\n    }\r\n}\r\n\r\nexport function clearValidation(form, validationConfig) {\r\n    const inputFields = Array.from(form.querySelectorAll(validationConfig.inputSelector));\r\n    const inputErrorClass = validationConfig.inputErrorClass;\r\n    const errorClass = validationConfig.errorClass;\r\n    const formButton = form.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputFields.forEach((inputField) => {\r\n        removeInputError(form, inputField, inputErrorClass, errorClass)\r\n    })\r\n\r\n    addInactiveButtonClass(formButton, validationConfig.inactiveButtonClass)\r\n}\r\n\r\n","import './pages/index.css';\r\nimport {\r\n    createPlaceCard,\r\n    deletePlaceCard,\r\n    addPlaceCardLike,\r\n    removePlaceCardLike,\r\n    countPlaceCardLikes,\r\n    cardPlaceLikeStatus\r\n} from './scripts/card.js';\r\nimport {\r\n    openModal,\r\n    closeModal,\r\n    closeModalByOverlayAndCloseButton\r\n} from './scripts/modal.js';\r\nimport {\r\n    enableValidation,\r\n    clearValidation\r\n} from './scripts/validation.js'\r\nimport {\r\n    updateProfileRequest,\r\n    updateAvatarRequest,\r\n    createPlaceRequest,\r\n    getProfileRequest,\r\n    getPlacesRequest,\r\n    addPlaceLikeRequest,\r\n    removePlaceLikeRequest\r\n} from './scripts/api.js'\r\n\r\nconst popups = document.querySelectorAll('.popup');\r\nconst placesCards = document.querySelector('.places__list');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image')\r\nconst popupAvatarEdit = document.querySelector('.popup_type_new-avatar')\r\nconst popupFormAvatarEdit = document.forms['new-avatar'];\r\nconst popupFormAvatarEditLink = document.querySelector('.popup__input_type_avatar_url');\r\nconst buttonChangeAvatar = popupAvatarEdit.querySelector('.popup__button');\r\n\r\nconst popupProfile = document.querySelector('.popup_type_edit');\r\nconst buttonOpenPopupProfile = document.querySelector('.profile__edit-button');\r\nconst popupProfileForm = document.forms['edit-profile'];\r\nconst popupProfileFormName = document.querySelector('.popup__input_type_name');\r\nconst popupProfileFormDescription = document.querySelector('.popup__input_type_description');\r\nconst buttonUpdatePopupProfile = popupProfile.querySelector('.popup__button');\r\n\r\nconst popupCreatePlace = document.querySelector('.popup_type_new-card');\r\nconst buttonOpenPopupCreatePlace = document.querySelector('.profile__add-button');\r\nconst popupCreatePlaceForm = document.forms['new-place'];\r\nconst popupCreatePlaceFormName = document.querySelector('.popup__input_type_card-name');\r\nconst popupCreatePlaceFormImage = document.querySelector('.popup__input_type_url');\r\nconst buttonCreatePlace = popupCreatePlace.querySelector('.popup__button');\r\n\r\nconst popupLargePlaceCard = document.querySelector('.popup_type_image');\r\nconst popupLargePlaceCardImage = popupLargePlaceCard.querySelector('.popup__image');\r\nconst popupLargePlaceCardText = popupLargePlaceCard.querySelector('.popup__caption');\r\n\r\nconst popupDeletePlaceCardForm = document.forms['delete-form'];\r\nconst popupDeletePlaceCard = document.querySelector('.popup_type_delete-card');\r\n\r\nconst validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible',\r\n};\r\n\r\n\r\nfunction addPlaceCard(placeCard) {\r\n    placesCards.append(placeCard);\r\n}\r\n\r\nfunction handleTogglePlaceCardLike(evt, placeCardId, likeCounter) {\r\n\r\n    if (cardPlaceLikeStatus(evt.target)) {\r\n        removePlaceLikeRequest(placeCardId)\r\n            .then((data) => {\r\n                countPlaceCardLikes(likeCounter, data)\r\n                removePlaceCardLike(evt.target);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n        });\r\n\r\n    } else {\r\n        addPlaceLikeRequest(placeCardId)\r\n            .then((data) => {\r\n                countPlaceCardLikes(likeCounter, data)\r\n                addPlaceCardLike(evt.target);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n}\r\n\r\nfunction updatePopupProfileForm(popupFormName, popupFormDescription, profileTitle, profileDescription) {\r\n    popupFormName.value = profileTitle;\r\n    popupFormDescription.value = profileDescription;\r\n}\r\n\r\nfunction handleUpdateProfile(evt, popup, title, description, profileTitle, profileDescription) {\r\n    evt.preventDefault();\r\n    buttonUpdatePopupProfile.textContent = 'Сохранение...';\r\n\r\n    updateProfileRequest({\r\n        name: title.value,\r\n        about: description.value,\r\n    })\r\n        .then((data) => {\r\n            profileTitle.textContent = data.name;\r\n            profileDescription.textContent = data.about;\r\n            closeModal(popup);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            buttonUpdatePopupProfile.textContent = 'Сохранить';\r\n        })\r\n}\r\n\r\nfunction handleUpdateAvatar(evt, popup, avatarLink, profileAvatar) {\r\n    evt.preventDefault();\r\n    buttonChangeAvatar.textContent = 'Сохранение...';\r\n\r\n    updateAvatarRequest(avatarLink)\r\n        .then((data) => {\r\n            profileAvatar.style.backgroundImage = `url(${data.avatar})`;\r\n            closeModal(popup);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            buttonChangeAvatar.textContent = 'Сохранить';\r\n        });\r\n}\r\n\r\nfunction clearPopupAvatarForm(link) {\r\n    link.value = '';\r\n}\r\n\r\n\r\nfunction openPopupAvatarEditForm(popup) {\r\n    openModal(popup);\r\n}\r\n\r\nfunction clearPopupCreatePlaceForm(placeName, placeImage) {\r\n    placeName.value = '';\r\n    placeImage.value = '';\r\n}\r\n\r\nfunction handleOpenPopupCreatePlace(evt, popup, placeImage, placeName, createPopupLargeCard, handleTogglePlaceCardLike, placesCards, profile, handleOpenPopupDelete, popupDelete) {\r\n    evt.preventDefault();\r\n    buttonCreatePlace.textContent = 'Создание...';\r\n\r\n    createPlaceRequest({\r\n        name: placeName.value,\r\n        link: placeImage.value,\r\n    }).then((place) => {\r\n        const card = createPlaceCard(place, profile._id, createPopupLargeCard, handleTogglePlaceCardLike, handleOpenPopupDelete, popupDelete);\r\n        placesCards.prepend(card);\r\n        closeModal(popup);\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    }).finally(() => {\r\n        buttonCreatePlace.textContent = 'Создать';\r\n    })\r\n}\r\n\r\nfunction createPopupLargePlaceCard(link, name) {\r\n    popupLargePlaceCardImage.src = link;\r\n    popupLargePlaceCardText.textContent = name;\r\n\r\n    openModal(popupLargePlaceCard);\r\n}\r\n\r\nlet handleSubmitConfirmPopup = () => { };\r\n\r\nfunction handleOpenPopupDelete(cardId, cardElement, popupDelete) {\r\n    openModal(popupDelete);\r\n\r\n    handleSubmitConfirmPopup = (evt) => {\r\n        evt.preventDefault();\r\n        deletePlaceCard(cardElement, cardId);\r\n\r\n        closeModal(popupDelete);\r\n    };\r\n}\r\n\r\nlet selfProfile = {};\r\n\r\nPromise.all([\r\n    getProfileRequest(),\r\n    getPlacesRequest()\r\n]).then(([profile, placesData]) => {\r\n    selfProfile = profile;\r\n    profileTitle.textContent = profile.name;\r\n    profileDescription.textContent = profile.about;\r\n    profileAvatar.style.backgroundImage = `url(${profile.avatar})`;\r\n\r\n    placesData.forEach((place) => {\r\n        const placeCard = createPlaceCard(place, profile._id, createPopupLargePlaceCard, handleTogglePlaceCardLike, handleOpenPopupDelete, popupDeletePlaceCard)\r\n        addPlaceCard(placeCard);\r\n    })\r\n}).catch((err) => {\r\n    console.log(err);\r\n});\r\n\r\npopupDeletePlaceCardForm.addEventListener('submit', (evt) => {\r\n    handleSubmitConfirmPopup(evt);\r\n})\r\n\r\npopupCreatePlaceForm.addEventListener(\r\n    'submit',\r\n    (evt) => {\r\n        handleOpenPopupCreatePlace(\r\n            evt, popupCreatePlace, popupCreatePlaceFormImage, popupCreatePlaceFormName, createPopupLargePlaceCard, handleTogglePlaceCardLike, placesCards, selfProfile, handleOpenPopupDelete, popupDeletePlaceCard\r\n        );\r\n    });\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n    clearPopupAvatarForm(popupFormAvatarEditLink);\r\n    clearValidation(popupFormAvatarEdit, validationConfig);\r\n    openPopupAvatarEditForm(popupAvatarEdit);\r\n})\r\n\r\npopupFormAvatarEdit.addEventListener(\r\n    'submit',\r\n    (evt) => {\r\n        handleUpdateAvatar(\r\n            evt, popupAvatarEdit, popupFormAvatarEditLink.value, profileAvatar\r\n        );\r\n    })\r\n\r\nbuttonOpenPopupProfile.addEventListener(\r\n    'click',\r\n    () => {\r\n        updatePopupProfileForm(\r\n            popupProfileFormName, popupProfileFormDescription, profileTitle.textContent, profileDescription.textContent\r\n        );\r\n        clearValidation(popupProfileForm, validationConfig);\r\n        openModal(popupProfile);\r\n    }\r\n);\r\n\r\npopupProfileForm.addEventListener(\r\n    'submit',\r\n    (evt) => {\r\n        handleUpdateProfile(\r\n            evt, popupProfile, popupProfileFormName, popupProfileFormDescription, profileTitle, profileDescription\r\n        );\r\n    }\r\n);\r\n\r\nbuttonOpenPopupCreatePlace.addEventListener(\r\n    'click',\r\n    () => {\r\n        clearPopupCreatePlaceForm(popupCreatePlaceFormName, popupCreatePlaceFormImage);\r\n        clearValidation(popupCreatePlaceForm, validationConfig);\r\n        openModal(popupCreatePlace);\r\n    }\r\n);\r\n\r\npopups.forEach(function (popup) {\r\n    popup.classList.add('popup_is-animated');\r\n\r\n    popup.addEventListener('click', (evt) => closeModalByOverlayAndCloseButton(evt, popup));\r\n});\r\n\r\nenableValidation(validationConfig);\r\n\r\n\r\n\r\n\r\n"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createPlaceCard","place","selfProfileId","createPopupLargeCard","handleTogglePlaceCardLike","handleOpenPopupDelete","popupDelete","cardElement","cloneNode","cardImage","src","link","textContent","name","alt","addEventListener","likesAmount","likes","length","likeCounter","likeButton","evt","_id","some","like","addPlaceCardLike","removePlaceCardLike","deleteButton","owner","classList","remove","add","countPlaceCardLikes","data","openModal","popup","closeModalByEscapeButton","closeModal","removeEventListener","key","removeInputError","form","inputField","inputErrorClass","errorClass","formError","id","addInactiveButtonClass","formButton","inactiveButtonClass","disabled","toggleFormButtonStatus","inputFields","validity","valid","checkInvalidInput","removeInactiveButtonClass","clearValidation","validationConfig","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","popups","placesCards","profileTitle","profileDescription","profileAvatar","popupAvatarEdit","popupFormAvatarEdit","forms","popupFormAvatarEditLink","buttonChangeAvatar","popupProfile","buttonOpenPopupProfile","popupProfileForm","popupProfileFormName","popupProfileFormDescription","buttonUpdatePopupProfile","popupCreatePlace","buttonOpenPopupCreatePlace","popupCreatePlaceForm","popupCreatePlaceFormName","popupCreatePlaceFormImage","buttonCreatePlace","popupLargePlaceCard","popupLargePlaceCardImage","popupLargePlaceCardText","popupDeletePlaceCardForm","popupDeletePlaceCard","formSelector","placeCardId","target","contains","fetch","method","then","removePlaceLikeRequest","catch","err","console","log","addPlaceLikeRequest","createPopupLargePlaceCard","handleSubmitConfirmPopup","cardId","preventDefault","card","deletePlaceCard","selfProfile","all","_ref","_ref2","profile","placesData","about","style","backgroundImage","avatar","placeCard","append","placeImage","placeName","value","body","JSON","stringify","prepend","finally","handleOpenPopupCreatePlace","avatarLink","updateAvatarRequest","handleUpdateAvatar","popupFormName","popupFormDescription","updatePopupProfileForm","title","description","handleUpdateProfile","closeModalByOverlayAndCloseButton","inactiveFormButton","patternMismatch","setCustomValidity","dataset","errorMessage","validationMessage","showInputError","validateInputField","setEventListeners","enableValidation"],"sourceRoot":""}